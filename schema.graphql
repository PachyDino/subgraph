type Task @entity {
  id: ID!
  initiatorAddress: Bytes!
  recipientAddress: Bytes!
  amount: BigInt!
  entranceAmount: BigInt!
  description: String!
  endTask: BigInt!
  positiveVotes: BigInt
  negativeVotes: BigInt
  participants: BigInt!
  accepted: Boolean
  executed: Boolean
  finished: Boolean
  canceled: Boolean
  hashtag1: String
  hashtag2: String
  hashtag3: String 
  language: String!
  proofLink: String
}

type UserTask @entity {
  id: ID!
  userAddress: Bytes!
  userStake: BigInt!
  voted: Boolean
  vote: Boolean
  taskData: Task
}

type UserTask2 @entity {
  id: ID!
  userAddress: Bytes!
  userStake: BigInt!
  voted: Boolean
  vote: Boolean
  taskData: Task
}

type Bet @entity {
  id: ID!
  initiatorAddress: Bytes!
  description: String!
  participantsA: BigInt
  participantsB: BigInt
  stakeA: BigInt
  stakeB: BigInt
  textA: String!
  textB: String!
  endBet: BigInt!
  noMoreBets: Boolean
  finished: Boolean
  winnerPartyA: Boolean
  draw: Boolean
  failed: Boolean
  hashtag1: String
  hashtag2: String
  hashtag3: String 
  language: String!
  proofLink: String
}

type UserBet @entity {
  id: ID!
  userAddress: Bytes!
  userStake: BigInt!
  redeemed: Boolean
  joinedA: Boolean
  betData: Bet
}

type UserFavStats @entity {
  id: ID!
  negativeVotes: BigInt
  positiveVotes: BigInt
  betBalance: BigInt
  betsWon: BigInt
  betsLost: BigInt
}

type UserDashStats @entity {
  id: ID!
  userName: String
  displayAchievement: String
  youtube: String
  twitter: String
  instagram: String
  tiktok: String
  twitch: String
  tribute: BigInt
  profit: BigInt
  blacklist: [Bytes!]
}

type UserAchievements @entity {
  id: ID!
  tasksCreated: BigInt
  tasksJoined: BigInt
  tasksVoted: BigInt
  betsCreated: BigInt
  betsJoined: BigInt
  betsFinished: BigInt
  accountCreation: BigInt
  seasonOneRank: BigInt
  seasonTwoRank: BigInt
  seasonThreeRank: BigInt
}

type GlobalStats @entity {
  id: ID!
  taskProfits: BigInt
  users: BigInt
  taskCount: BigInt
  betProfit: BigInt
  betCount: BigInt
}
